/**
* Pilpil v2.0.1 - Progressive Image Loading
* @link https://github.com/zafree/pilpil
* @copyright 2015-2024 Zafree <zafree@live.com>
* @license MIT
*/
(function(){function d(t){const e=t.dataset.width,a=t.dataset.height,i=a/e*100,n=document.createElement("div");n.className="image__aspect-ratio",t.appendChild(n).setAttribute("style","padding-bottom:"+i+"%;"),t.setAttribute("style","max-width:"+e+"px;max-height:"+a+"px;")}function c(t){const e=t.dataset.width,a=t.dataset.height,i=t.dataset.small,n=30,o=a/e*n,l=document.createElement("canvas");l.className="image__canvas",t.appendChild(l);const s=t.appendChild(l);s.getContext("2d"),s.height=o,s.width=n;const r=new Image;r.src=i,r.onload=function(){var f=new h(s,r);f.blur(2),t.classList.add("canvas--loaded")}}class h{constructor(e,a){this.image=a,this.element=e,e.width=a.width,e.height=a.height,this.context=e.getContext("2d"),this.context.drawImage(a,0,0)}blur(e){this.context.globalAlpha=.5;for(var a=-e;a<=e;a+=2)for(var i=-e;i<=e;i+=2)this.context.drawImage(this.element,i,a),i>=0&&a>=0&&this.context.drawImage(this.element,-(i-1),-(a-1))}}function g(t){const e=t.dataset.large,a=t.dataset.alt,i=new Image;i.className="image__original",i.src=e,t.appendChild(i),t.classList.add("image--loading"),i.alt=a,i.onload=function(){setTimeout(function(){t.classList.add("image--loaded"),t.classList.remove("image--loading")},600)}}function m(t){let e={root:null,rootMargin:"0px",threshold:.2},a=new IntersectionObserver(i,e);function i(n,o){n.forEach(l=>{if(l.isIntersecting){let s=l.target;c(s),g(s),o.unobserve(s)}})}a.observe(t)}function u(t){const e=t.getAttribute("data-width"),a=t.getAttribute("data-height"),i=t.getAttribute("data-small"),n=t.getAttribute("data-large");return t.getAttribute("data-alt"),e!==""&&e!==null&&a!==""&&a!==null&&i!==""&&i!==null&&n!==""&&n!==null}function b(){document.querySelectorAll(".image").forEach(e=>{u(e)&&(d(e),m(e))})}b()})();
